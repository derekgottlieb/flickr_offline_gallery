# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

require 'vcr'
require 'pry-rescue'
require 'flickraw'
require 'flickr_offline_gallery'

if  ENV["FLICKR_OFFLINE_GALLERY_SPEC_API_KEY"] && ENV["FLICKR_OFFLINE_GALLERY_SPEC_SHARED_SECRET"]
  FlickRaw.api_key =       ENV["FLICKR_OFFLINE_GALLERY_SPEC_API_KEY"]
  FlickRaw.shared_secret = ENV["FLICKR_OFFLINE_GALLERY_SPEC_SHARED_SECRET"]
else
  puts "you need to set FLICKR_OFFLINE_GALLERY_SPEC_API_KEY and FLICKR_OFFLINE_GALLERY_SPEC_SHARED_SECRET to test against live flickr"
end

VCR.configure do |c|
  c.cassette_library_dir = 'fixtures/vcr_cassettes'
  c.hook_into :webmock

  c.filter_sensitive_data('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx') do |interaction|
    interaction.request.headers["Authorization"].first.sub(/.*oauth_nonce="([^"]*)".*/, "\\1")

  c.filter_sensitive_data('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx') do |interaction|
    interaction.request.headers["Authorization"].first.sub(/.*oauth_consumer_key="([^"]*)".*/, "\\1")
  end

  c.filter_sensitive_data('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx') do |interaction|
    interaction.request.headers["Authorization"].first.sub(/.*oauth_signature="([^"]*)".*/, "\\1")
  end
  end
end

# make FlickRaw work consistently with VCR
#
# FlickRaw keeps state in class instance variables and dynamically defines a
# bunch of classes, which means request order is out unless this request is
# done once up front. Nasty!
VCR.use_cassette('init') do
  FlickrOfflineGallery::FlickrAPI.instance
end
